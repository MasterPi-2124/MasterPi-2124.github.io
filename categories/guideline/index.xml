<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guideline on Master Pi</title>
    <link>https://masterpi-2124.github.io/categories/guideline/</link>
    <description>Recent content in Guideline on Master Pi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://masterpi-2124.github.io/categories/guideline/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Used to GitHub, Eps. 3</title>
      <link>https://masterpi-2124.github.io/p/getting-used-to-github-eps-3/</link>
      <pubDate>Wed, 04 May 2022 21:55:37 +0700</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/getting-used-to-github-eps-3/</guid>
      <description>Hi again. This is Dung Dao Minh, vice president of SoICT Innovation Club, and in this third post of series &amp;ldquo;Github 101&amp;rdquo;, I will talk about some kind of scenarios that can happen when you work on multiple branches in your work repositories, or work in collaboration with a team on a project.
First words In many cases, you (and your collaborators) create multiple branches for different purpose: creating features, bug fixing, code versioning,&amp;hellip; Most of the issues happen when you try to combine the code between those branches: you may realize that you still commit to the main branch while fixing bugs/adding features, another developer may add a little documentation on your code (which is great), or your evil coworker might mess up with your code and make it full of bugs.</description>
    </item>
    
    <item>
      <title>Getting Used to GitHub, Eps. 2</title>
      <link>https://masterpi-2124.github.io/p/getting-used-to-github-eps-2/</link>
      <pubDate>Sun, 19 Sep 2021 14:11:37 +0700</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/getting-used-to-github-eps-2/</guid>
      <description>Hello, in this episode we will discuss branches in git, and how to push, pull or merge. We also talk about the remote repository and local repository, and how to connect them. There are a lot of things to discuss but I will focus on the background, and the remain can be learned by exercising.
Remote repository When you clone a repository from the Internet, you may notice that it will copy all the content of the project, even every versions, branches, &amp;hellip; In other word, you are simply link the remote project to your local repository.</description>
    </item>
    
    <item>
      <title>Getting Used to GitHub, Eps. 1</title>
      <link>https://masterpi-2124.github.io/p/getting-used-to-github-eps-1/</link>
      <pubDate>Sat, 18 Sep 2021 16:36:56 +0700</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/getting-used-to-github-eps-1/</guid>
      <description>Hi, this is my first series about how to use git and github effectively. This would include some basic commands, tips and what to do in some specific situations. You also know how to deal with problems occur during the building setup, and a basic knowledge of GitHub Flow, what CI/CD is, &amp;hellip; This is the first post in series &amp;ldquo;Github 101&amp;rdquo;, and you can find other posts at &amp;ldquo;See also&amp;rdquo; section.</description>
    </item>
    
    <item>
      <title>How I Setup My Development Environment</title>
      <link>https://masterpi-2124.github.io/p/how-i-setup-my-development-environment/</link>
      <pubDate>Thu, 16 Sep 2021 21:54:03 +0700</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/how-i-setup-my-development-environment/</guid>
      <description>Hi, this is my quick guideline on how to improve linux development experience.
Operating system When you search for &amp;ldquo;Linux OS&amp;rdquo;, Google would give you thousands of &amp;ldquo;operation systems&amp;rdquo; like Ubuntu, Arch, Mint, &amp;hellip; So which one is best for you?
First, &amp;ldquo;Linux&amp;rdquo; as you say is not &amp;ldquo;operating system&amp;rdquo;. It is the kernel, the bridge between software and hardware, and reponsible for almost everything in the computer. When you boot your computer, it is the first part of the OS loaded into the RAM for your system to start working.</description>
    </item>
    
    <item>
      <title>How to Make Your Trackpad Like Macbook</title>
      <link>https://masterpi-2124.github.io/p/how-to-make-your-trackpad-like-macbook/</link>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/how-to-make-your-trackpad-like-macbook/</guid>
      <description>If you used Mac products before, I bet the only thing you will never forget is its multi-touch trackpad. Its convenience can improve the work performance a lot, and it even made me feel confused when using other products&amp;rsquo;s trackpad. Luckily, when you say &amp;ldquo;Linux&amp;rdquo;, you are talking about the &amp;ldquo;Open Sources&amp;rdquo;, and there are some drivers that support it, like mtrack.
In this blog, we will dive into how we can make our trackpad as close to Mac experience as we can get with mtrack.</description>
    </item>
    
    <item>
      <title>How to Make a Github Blog</title>
      <link>https://masterpi-2124.github.io/p/how-to-make-a-github-blog/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://masterpi-2124.github.io/p/how-to-make-a-github-blog/</guid>
      <description>Hi, this is my way to make a Github blog for my self, which will contain blogs, some projects, and some tips from my experience. I am a webasite newbie, so it took me almost 2 days to setup from start to finish, and it&amp;rsquo;s pretty easy. Here is how I made it.
Initial setup Create repositories First, let take a look at what a Github Page is, and how to create one.</description>
    </item>
    
  </channel>
</rss>
