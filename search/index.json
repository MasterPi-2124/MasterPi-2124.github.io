[{"content":"Hi, this is my way to make a Github blog for my self, which will contain blogs, some projects, and some tips from my experience. I am a webasite newbie, so it took me almost 2 days to setup from start to finish, and it\u0026rsquo;s pretty easy. Here is how I made it.\nInitial setup Create repositories First, let take a look at what a Github Page is, and how to create one. You should be able to create a repository for your Github Page named username.github.io, where username is your Github username.\nThe repository above will store the content of your website, but we will create another repository where the website development/authoring will take place, for example, Personal-Blog.\nInstall Hugo There are multiple ways to install Hugo:\n Install from binary releases on Github. I reccommend installing the extended version, because some themes will run only on this version. On a Mac with Homebrew installed, run brew install hugo On Windows with Chocolatey: choco install hugo[-extended] -confirm  Create a site Initialize a new site Let\u0026rsquo;s clone 2 repositories we created above to start:\ngit clone https://github.com/username/Personal-Blog.git Replace username with your username and Personal-Blog with your repository\u0026rsquo;s name.\nGoto the repository\u0026rsquo;s root directory, and start with hugo new site .with . will tell Hugo to create the site in the current directory.\nYou will see the folders and files like in this structure:\nsite_root |-- archetypes |-- assets |-- content |-- data |-- layouts |-- static |-- themes |-- config.toml The detail explaination for each folder is published on Hugo documentation, and it is necessary to understand it before continue.\nInstall theme Next, we wll pick a theme at Hugo theme website and install in themes folder. I will choose Hugo Stack Theme for the demonstration.\nCopy the theme\u0026rsquo;s github path, and install:\ngit submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack Go to the installed theme directory, you will see the exampleSite folder. Copy its content and paste into content folder. It stores all page and post we create for the website, so we will use it to test the new site.\nReplace config.toml by config.yaml copied above, and modify this file as in this intruction.\nPublish to Github Page After you add a post or a site, it\u0026rsquo;s time to push into the repository and publish. But first, we have to link the Github page repository to the current development repository:\ngit submodule add -b master https://github.com/username/username.github.io.git public It will clone the repository into public folder, as in Hugo documentation about directory structure. Check again with git remote -v:\norigin\thttps://github.com/username/username.github.io.git (fetch) origin\thttps://github.com/username/username.github.io.git (push) Then publish the site by running ./deploy.sh:\n#!/bin/sh # If a command fails then the deploy stops set -e printf \u0026quot;\\033[0;32mDeploying updates to GitHub...\\033[0m\\n\u0026quot; # Create commit message msg=\u0026quot;rebuilding site $(date)\u0026quot; if [ -n \u0026quot;$*\u0026quot; ]; then msg=\u0026quot;$*\u0026quot; fi # Build the project. echo \u0026quot;\u0026quot; echo \u0026quot;\u0026quot; echo \u0026quot;Committing changes to $(pwd)\u0026quot; hugo -D # Go To Public folder cd public # Add 'public' (Github Pages repo) changes to git and commit/push. echo \u0026quot;\u0026quot; echo \u0026quot;\u0026quot; echo \u0026quot;Committing changes to $(pwd)\u0026quot; git add . git commit -m \u0026quot;$msg\u0026quot; git push origin master # Add this repos changes to git and commit/push. First 'cd' out of public cd .. echo \u0026quot;\u0026quot; echo \u0026quot;\u0026quot; echo \u0026quot;Committing changes to $(pwd)\u0026quot; git add . git commit -m \u0026quot;$msg\u0026quot; git push origin master Modification You can also modify the theme to suit your need. All documentations is on these websites:\n https://docs.stack.jimmycai.com/ https://gohugo.io/documentation/  Here is my work:\n The blog sourece code The Github Page repository  ","date":"2021-09-10T01:42:12+07:00","image":"https://masterpi-2124.github.io/p/how-to-make-a-github-blog/cover_hu44155343768364342e37da43d40f3a9f_382410_120x120_fill_box_smart1_3.png","permalink":"https://masterpi-2124.github.io/p/how-to-make-a-github-blog/","title":"How to Make a Github Blog"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2021-09-09T00:00:00Z","image":"https://masterpi-2124.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://masterpi-2124.github.io/p/emoji-support/","title":"Emoji Support"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","date":"2020-09-09T00:00:00Z","permalink":"https://masterpi-2124.github.io/p/rich-content/","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-09-09T00:00:00Z","permalink":"https://masterpi-2124.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn: ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\nImages  Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash   Photo by Florian Klauer on Unsplash \n Photo by Helena Hertz on Unsplash   Photo by Hudai Gayiran on Unsplash \n![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg)   The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"0001-01-01T00:00:00Z","image":"https://masterpi-2124.github.io/p/markdown-examples/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_120x120_fill_q75_box_smart1.jpg","permalink":"https://masterpi-2124.github.io/p/markdown-examples/","title":"Markdown Examples"}]